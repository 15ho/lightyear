[package]
name = "lightyear_examples"
version = "0.1.0"
authors = ["Charles Bournhonesque <charlesbour@gmail.com>"]
edition = "2021"
rust-version = "1.65"
description = "Examples for the lightyearServer-client networking library for the Bevy game engine"
readme = "README.md"
repository = "https://github.com/cBournhonesque/lightyear"
keywords = ["bevy", "multiplayer", "networking", "netcode", "gamedev"]
categories = ["game-development", "network-programming"]
license = "MIT OR Apache-2.0"
exclude = ["/tests"]
publish = false

# for wasm-pack
[lib]
crate-type = ["cdylib", "rlib"]

[[example]]
name = "interest_management"
path = "interest_management/main.rs"

[[example]]
name = "interest_management_wasm"
path = "interest_management_wasm/main.rs"

[[example]]
name = "simple_box"
path = "simple_box/main.rs"

[[example]]
name = "bevy_headless"
path = "bevy_headless.rs"

[[example]]
name = "bevy_simple"
path = "bevy_simple.rs"

[[example]]
name = "bevy_step"
path = "bevy_step.rs"

[[example]]
name = "input_buffer_step"
path = "input_buffer_step.rs"

[[example]]
name = "prediction_step"
path = "prediction_step.rs"


[features]
metrics = ["lightyear/metrics", "dep:metrics-exporter-prometheus"]
webtransport = ["lightyear/webtransport", "dep:tokio"]
mock_time = ["lightyear/mock_time"]

[dependencies]
lightyear = { path = "../lightyear" }
serde = { version = "1.0.188", features = ["derive"] }
anyhow = { version = "1.0.75", features = [] }
tracing = "0.1"
tracing-subscriber = "0.3.17"
bevy = { version = "0.12", features = ["bevy_core_pipeline"] }
derive_more = { version = "0.99", features = ["add", "mul"] }
rand = "0.8.1"
clap = { version = "4.4", features = ["derive"] }
mock_instant = "0.3"
metrics-exporter-prometheus = { version = "0.12.1", optional = true }
bevy-inspector-egui = "0.21.0"
getrandom = { version = "0.2.11", features = ["js"] }
base64 = "0.21.5"
ring = "0.17.7"
cfg-if = "1.0.0"


[target."cfg(not(target_family = \"wasm\"))".dependencies]
tokio = { version = "1.34", features = [
    "rt",
    "rt-multi-thread",
    "net",
    "time",
], optional = true }

[target."cfg(target_family = \"wasm\")".dependencies]
console_error_panic_hook = { version = "0.1.7"}
ring = { version = "0.16", optional = true }
web-sys = { version = "0.3", features = [
    "console",
    "WebTransport",
    "WebTransportHash",
    "WebTransportOptions",
    "WebTransportBidirectionalStream",
    "WebTransportSendStream",
    "WebTransportReceiveStream",
    "ReadableStreamDefaultReader",
    "WritableStreamDefaultWriter",
    "WebTransportDatagramDuplexStream",
]}
wasm-bindgen-test = "0.3.39"

